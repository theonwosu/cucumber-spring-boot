package com.ttninc.stepdefinitions;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.web.server.LocalServerPort;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.web.client.RestTemplate;

import com.ttninc.CucumberSpringBootApplication;
import com.ttninc.model.Employee;
import com.ttninc.service.EmployeeService;

import io.cucumber.java.Before;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.When;

@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@ContextConfiguration(classes = CucumberSpringBootApplication.class)
public class CucumberStepDefinitions {
	private static final Logger LOG = LoggerFactory.getLogger(CucumberStepDefinitions.class);
	private final RestTemplate restTemplate = new RestTemplate();
	
    private final String SERVER_URL = "http://localhost";
    private final String THINGS_ENDPOINT = "/info";

    @LocalServerPort
    private int port;	
	
	  @Autowired
	  private EmployeeService employeeService;
	  
	  @Before
	  public void setUp() {
	    LOG.info("-------------- Spring Context Initialized For Executing Cucumber Tests --------------");
	    employeeService.display();
	  }

	  
	  
    @Given("^the user can access employee$")
    public void the_user_can_access_employee() {
    	Employee emp = restTemplate.getForEntity(getEndPoint(), Employee.class).getBody();
    	System.out.println(emp);
    }
    
    @When("^the user adds an employee$")
    public void the_user_adds_an_employee() {
    	Employee employee = new Employee();
    	employee.setName("Mary");
    	employee.setAge(65);
    	int status = restTemplate.postForEntity(getEndPoint(), employee, Void.class).getStatusCodeValue();
    	System.out.println(">>>>>>>>>>>>>>>>>>>>>>Status : " + status + "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<");
    }   
    
    @And("^the user can clear employee list$")
    public void the_user_can_clear_employee_list() {
    	restTemplate.delete(getEndPoint());
    }    
    
    private String getEndPoint() {
        return SERVER_URL + ":" + port + THINGS_ENDPOINT;
    }    
}

